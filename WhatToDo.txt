
○ モーターのストップがない!
○ Scan の時 Stop に対する反応が遅い。(dwell タイム分待たないと反応しない)
○ Scan のデータ書き出し。
○ Monitor のデータ書き出し
○ MCA のデータ書き出し

○ MCA 画面内に情報。RealTime, LiveTime, CPS,...
○ MCA モードの時に指定時間で止まる機能がいる気がする。
○ MCA Dead Time 表示、取得。 cps ではなく count になってるがどうする。

○ グラフ表示部分を直接 XView にせず、コントロールを含んだコンテナにする
○ XView の XY プロットモードと Ring モードを切り分けて別々にするべき。
　　(MCAView の作成に合わせてした準備は終了)
○ MainWindow オンリーワン class 構成をやめたい。

○ Ok: でなく Er: もひろう。

○ V/F コンバータの向こうに Keithley をつなぐとき
　実際には、単にカウンタではなく Keithley の初期化も必要になるので
　派生したディテクタとして扱えるようにするべき

○ XView 部分拡大
○ XView モニタ時間シフト

○ Keithley をプリアンプ代わりにしてカウンタを使った測定をする際、レンジの扱い
　(今はオートレンジに頼ってる)
　レンジ指定もできるようにするべき

○ モニターの時の縦軸の目盛りまじめに
○ チューニングありスキャン
○ Keithley でスキャンした時、最初の一点がおかしい
○ 内部的には現在位置等を keV 基準で持っているのはまずそう。deg 基準に直したい。
○ 測定時、バックラッシュとりをやるべきか？ (PM16Cの設定だけで OK?)

○ Scan モードの時の横軸の表示。
　相対か絶対か、単位ありかパルスか。その単位の表示

改造中
○ ピエゾ　がまともに動いているかどうかは未確認。

○ 分光器：測定中はマニュアルで動かないようにロックする
            その為のフラグ立ては、外部での仕事にして、
　　　　　　2種類(マニュアル、測定)の「移動コマンド」は廃止

○ 野村ファイルフォーマットに真剣に対応(以下残ってる問題点)
  ・記録する際の横軸単位指定は「度」か「度以外」とする。
  　「度以外」の時は全部エネルギーに直す。
　・パラメータファイルの名前書き出しはやってない
　・Ortec でも Camac でも無いので、Scaler を「SCALE」とし、そのコードを「2」にした。
　・Offest はまだ真面目に扱ってない
　・FLUO のとき、各チャンネルのモードを真面目に書いてない
　・各点の記録にエンコーダのよみを入れていない
　・各点の記録は野村フォーマットを無視してI0と測定に使ったチャンネルのデータを
	ずらっと並べただけ
　・ヘッダ部分に終了時でないとかけない情報がある、今は、置換用の記号を埋めるだけで
　　実際の再読み込み + 置換はやってない

○ Keithley の測定時間設定をどうするか再考の必要あり
○ XAFSM.def にドライバ名のリストを入れた。
　そのうち Stars との接続時に listnodes をやって、ドライバが揃っているかどうかの確認を
　やるつもり
○ マルチディテクタをファイルに記録する際にどうやって対応するか
○ GUI をもう少しビューティフルに
○ umi と統合とかありえるか? 

やること 2011.2.16 〜

○ データファイル書き出しを真面目に
○ ダーク測定
○ バッチ処理
○ 設定ファイルの読み書き
○ 測定データ表示 (データを読み出して表示)
○ 単なる最大値決定になってるピーク位置決定を真面目にやる
○ 縦軸のスケール決定がダメすぎ

○ SSD 横軸補正
○ 吸収係数の計算統合？
○ I, I0 のお勧めガス表示
○ エネルギーレンジを変えた時の光学系の設定変更、あるいは設定変更おすすめ。

#########################################################################

対処済み 2012.12〜

○ XAFSM.def で、センサーに関して親ユニットがあるかないかと、その親ユニットの指定を入れた
○ XAFSM.def で、ユニークな識別子の定義を入れた
○ XAFSM.def で、モータの移動単位が REAL か INT かを示す項目を入れた。
   PM は INT, PZ は REAL
○ SSD 使えるようになってきたけど、まだ大変。
　シングルチャンネル含めて設定をやる画面つくった。
  ROI, peaking, dynamic, calibration, threshold, MAC サイズの確認　まで済。
　Real/Live は Real こていでいいかな。
○ SSD 設定画面
○ XView 測定結果の中にカーソル
　Measure, Monitor, Scan 全部
○ MCAView は XView と独立に作った。
○ V/F コンバータを BL5S2 からもらったので、Keithley を I-V コンバータに使って、
　NCT08 を通した測定が可能になった。
　I0, I1 につながった Keithley の出力を V/F コンバータに入れ、
　その出力を NCT08 の Ch2, 3 で数えている。
○ モニタに nct08 を必須にしない
○ モニタの時の dwell time  :: できてるはず
○ Scan モード多分できた。
○ 仮のコードだった個々のStars クライアントとの通信コードを実コードと置き換えはじめる。
  1. nct08 対応済 (もう少し細かいチェック必要)
　2. Keithley とりあえず実装 : 未確認
　3. エンコーダ　スケルトン実装
○ 軸の位置はエンコーダで判断するようにする
○ モータのパルスで見た角度とエンコーダで見た角度の整合をとる。--> とらない。
○ ファイル書き出しするようになってる。
○ ピークスキャン、タイムチャートとりあえず完成。
○ 測定結果のファイル名を、画面上の入力で変更しても、ダイアログの方が変わらない


○ アイデアとしては以下のように完全 Timer 排除ができるはず。やらない。
   測定開始時に emit - connect で、MeasSequence を呼び出す。
   MeasSequence からは、必ず Stars のコマンドを一つは発行してから抜けるようにする。
   発行されたコマンドに対する Stars からの応答を受ける関数の中から emit-connect で
   MeasSequence を呼び出す。


対処済み 2012.10〜

○ Monitor のグラフ表示整理
○ BLC2 から Stars サーバのアドレス等の設定関係のコードを移植 動いてるか? たぶん大丈夫

○ Stars.cpp ConnectionStage は enum にする。
   (SendCMD 等で最終ステージに着てるかどうかをちぇっくする)
○ ConnectionStage の 2段階目で Stars からの応答をチェックするようにした
○ Stars.cpp 接続開始をイベントドリブンにした
○ show は Initialize の後にしたいけど今はやってない。
○ 相手を変えて ReConnect 正しい相手にして ReConnect しないと繋がらなかったのを修正
○ グラフ表示のスケール決定がメチャクチャ。ー＞とりあえずは見られるようになった
○ 検出器ごとにデータ取り扱い法を指定できるようにする。
   log(I0/I1), I/I0, ... 等
○ nct08 の GetValue 関係で、一つ前の値を読んでしまっている。
○ MwSetup で、一般のモータ移動の欄 BLC2 版の Stars 通信に対応済
○ MwSetup で、モータの名前と実際に指定されるモータがずれていた
○ それに合わせて、BLC2 同様に別名を使えるように変更
   XAFSM.def の中の XAFSName, XAFSKey, XAFSTitle
○ BLC2 のコードを元に、軸の移動や検出器の操作等をポーリングでなくイベント駆動に書き換える
○ 仮のコードだった個々のStars クライアントとの通信コードを実コードと置き換えはじめる。
  0. pm16c04 対応済み
○ センサーの初期化処理を「どかん」とやってしまってる。
   ---> 少なくとも測定開始時は丁寧にやるようにした
○ 周期表での測定対象元素指定

○ 野村ファイルフォーマットに真剣に対応中
　・どうせ野村フォーマットにしないなら、エネルギーと角度を両方書いた方がいい

対処済 2011.2.16 〜

○ 計測中の現在位置表示 (繰り返し何回目、何ブロック目、何ステップ目) : 取り合えず OK
○ BlockStart ... は、計測開始時にコピーして使う (Repeat だけは計測中に変更可)
○ pause を生かす
○ stop 時の「ほんとに？」ダイアログ。
○ 終了時の戻り位置指定
○ 見積り測定時間の表示
○ 測定開始前のデータ点検
○ Stars との接続 (その先の dummy デバイスとの接続)
○ 作業ログ
○ データのリアルタイム表示
○ 結晶変更 (プログラム側での変更だけ)
○ Stars シミュレーションコード削除
○ モーターの単純移動
○ Scan/Search の実装
○ SoPS: 相対移動をもう少し考える(width 指定、始点終点指定の使い分け)
○ ピーク位置決定
○ SoPS: スキャン中のモータの位置表示位置を考える

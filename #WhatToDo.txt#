○ SetUp : モニタで「再開」できるようにする。作業中

○ S2D, XAFS 中に ROI 変更を受け付けない。オプション選択を無くし、より強固にする。
       多分大体 OK ??

○ S2D 作業中 !!!
  ○ S2DView の中で、軸の上下、左右反転指定ができるようにしたが、
     モータごとにどっちに走ってるかをチャント把握して、
     反転しなくてもいいようにするほうがもっといい。
  ○ 福島研の測定中、S2D で横軸の時間を伸ばすとおかしくなった。再現するか？
  ○ 福島研の測定中、S2D で長時間の測定を使用としたところ動作が不穏。
  ○ 蛍光、標準 XAFS, Cs で、繰り返し回数を 6 (5でも)にすると XafsM2 が落ちた。
　　　Windows 上では再現したが、Unix 上では再現しない。なぜ？

○ SSD 数え落とし補正テーブル作成、時定数計算支援
○ データの読み込み

○ 「条件設定」の「移動」は、対応するモータを変更した時、そのモータの状態に合わせて
　「停止」に変わるほうが良い。
○ 「条件設定」でスキャン中にモータの選択を変えてしまうとおかしくなる。
   (スキャン条件を完全に保存せずにスキャンしているのが悪い)

○ QXafs 60msec 問題ほぼ解決
   1. q34410a のドライバに qInitialize を2回かけ、q34410a のドライバ側で、
      qInitialize を分解したコマンドを発行するとき 100ms 毎の wait を入れる。
      これで 60ms は解決。ただ、上記の解決法はあまりに場当たりなので、
　　　正しいコマンド並びと、必要な待ち時間をちゃんと検討する必要あり。
   2. 上記をクリアした段階で、スキャンを遅くしていくと、ある程度以上で
　　　測定できなくなる現象有り。結論としては PM16C の Low スピードよりも
      台形駆動の High スピードのほうが遅くなり、計算上、振りかぶり距離が
　　　マイナスになってしまったため、トリガ発生開始点を通らなくなってしまってた。

○ チューニングテーブルを使うようにする。

○ DXM の Center の定義ができるようにしたが、もしかすると MMainTh->setValue( .. ) 
   とかされてしまうと意味がない？

○ QXAFS で 60Hz ノイズが出る。
○ mouseDoubleClicked event を拾う

○ 2次元スキャン作業開始
○ チェンジャの datum 作り始めた。

○ MCA : Peak 位置の表示法を検討する必要有り。
○ 今のところ問題は出ていないが、
   MCAs, MCAs0 の更新が速すぎると、外部コピーが追いつかなくなる可能性あり。
   コピーは内部で面倒を見るか、何かロック機構がいる気がする。

○ QXafs のリピート回数の上限確認。かつその回数に耐えられるかどうか確認すべし
   150点 x 2,000 回
○ QXafs で 10,000(x3: I0, I1, mu)本の線が来た時の対処ができるよう XYView を改造。
   従来の動作には影響がないはずだけど要確認。---> 内部的には 600本の線を保持。
   実用的な時間で動くか？ ----> 600本表示楽勝
○ 600 を超えた時、ほんとにちゃんと表示しているのか、潰れてしまって見えないのでわからん。

○ QXafs で「中止」した時の後処理
○ MCA 複数リージョンに対応する
○ 2次元スキャン。
○ 4軸ステージのコントロールもう少しフレンドリーにできないかなあ。
○ MCA のピークサーチ

○ QXafs DV の、記録可能点数は XAFSM.def に入れて、測定開始時にチェック

○ XAFS 測定で一時停止を何度もかけると、グラフが表示されなくなる ?
○ SSD を使った XAFS 測定中に、MCA のウインドウ(ROI)を変更しようとすると落ちた。

○ スキャンによるビームポジションの移動に対して
　ステージスキャンでついていくのは現実的か？

○ 測定停止時には、とりあえず分光器に STOP を一発入れておく

○ View を切り替えた時、表示線選択ボタンの状態を覚えとくようにする。
   まえに押してたボタンの状態を忘れるのが玉に瑕。---> 作業中。意外とめんどい
   --> できた。あとはこれを data-read にも拡張

○ MCAView 将来にそなえて複数 ROI 設定に対応するべき

○ SSD-MCA ズレてるチャンネルがわかりやすいように全チャンネル同時表示も欲しい
○ MCAView ピーク検出、分離、ピーク値、半値幅表示

○ データ表示　横軸エネルギーにしたい。
○ データ表示　どの線がどのチャンネルかわかるようにしたい。
　　選択した線のタグ表示
○ データ表示  できるだけ測定時と近い表示にしたい

○ 蛍光のデータ読み込み表示まともになったけど表示選択できるようにしたい。
○ データ読み込み時でも SSD のデータは合計して表示したり、チャンネルを選択したりしたい
○ SSD の個別チャンネルのダーク測定が正しくできているか再確認。

○ I0 なしチェックするか？

○ 例えば、Cu-K のエッジに決め打ちして、較正のシーケンスを勝手に行う、
　というのも良さそう。
○ XYView で、マウスカーソル位置の値を表示するモードと線を選択するモードを分離する。
○ XYView で、キー修飾やボタンの種類をどの機能に割り振るかを設定可能にする。
○ XYView で、選択するモードに入る修飾キーを作ってみる。
○ MwMeas BLKstart, step, ... の入力時、追随して他の数値を変えるために
     editingFinished でひろっているのをどうするか検討

○ SC410 スピード設定とか
○ SC410 関連で起動時にへんな GetValue が出てるみたい...だけど、いいか。

○ MCA 後からチャンネル切り替えで、リアルタイム、ライブタイムの表示がおかしい
○ MCA その他も cps ではなく count になってるがどうする。

○ Keithley で、あえて固定レンジを選ばないと言う選択も欲しい
○ チューニングありスキャン
○ Keithley でスキャンした時、最初の一点がおかしい
○ 内部的には現在位置等を keV 基準で持っているのはまずそう。deg 基準に直したい。
○ 測定時、バックラッシュとりをやるべきか？ (PM16Cの設定だけで OK?)

○ Scan モードの時の横軸の表示。
   相対か絶対か、単位ありかパルスか。その単位の表示

○ ピエゾ　がまともに動いているかどうかは未確認。

○ 野村ファイルフォーマットに真剣に対応(以下残ってる問題点)
  ・記録する際の横軸単位指定は「度」か「度以外」とする。
  　「度以外」の時は全部エネルギーに直す。
　・パラメータファイルの名前書き出しはやってない
　・Ortec でも Camac でも無いので、Scaler を「SCALE」とし、そのコードを「2」にした。
○ マルチディテクタをファイルに記録する際にどうやって対応するか

○ Keithley の測定時間設定をどうするか再考の必要あり

○ 設定ファイルの読み書き
○ 単なる最大値決定になってるピーク位置決定を真面目にやる

○ ハッチ内の装置コントロール
○ ハッチ内シャッタ。
○ バッチ処理
○ 吸収係数の計算統合？
○ I, I0 のお勧めガス表示
○ エネルギーレンジを変えた時の光学系の設定変更、あるいは設定変更おすすめ。
○ GUI をもう少しビューティフルに
○ umi と統合とかありえるか? 

#########################################################################
対処済み 2014.1〜

○ SetUp : 同時に測定できる計器の数を 3->5 にした OK
○ SetUp : TYView で Log 表示ができるようにした OK
○ S2D : map 上に、現在位置表示。 OK
○ S2D : SSDでスキャンした時の、各点の MCA セーブにはまだ対応していない --> した。 OK
○ MCAView を独立させた時、元素名表示選択の On/Off シグナルが届いてない --> OK

○ After XAFS
   ○ I0 は一回分しか残ってない <<---- 急いで解決すべし --> 解決した
   ○ Dark は共通をつかうからいい？ ---> いい OK
   ○ 多数回積算がいいのか、一回ごとの表示がいいのか ---> 選択肢は作った
   ○ 各点の測定時間を記録してない ---> OK
   ○ MCA を後からセーブ ---> できる

   ○ RecordMCAs は無くして、MCA 使用時は常に全部セーブする --> OK
   ○ AfterSave のボタンは、RecordMCAs の位置に移す  --> OK
   ○ AfterShowType はとりあえず先頭の画面からは消す --> Windows の時に選択肢を無くした

○ QXAFS のデータを均して保存 --> できる。

対処済み 2013.10〜
○ View Tab の内容の印字ができるようにした。
○ SetUp の スキャンの後、グラフ上の点をクリックするとそこに移動するようにした
○ 2次元スキャンt色々作業中
  ○ S2DView の内容も印字するようにしたい --> した
  ○ S2DView の中で、軸の上下、左右反転指定ができるようにする。--> した
     (モータごとにどっちに走ってるかをチャント把握して、
     反転しなくてもいいようにするほうがもっといいけど)
　○ S2DView で、全点の積分値のMCA表示ができるようにする --> した
  ○ SSD と CNT の start (getValue0 in AUnit.cpp) に変更あり
　　　通常のXAFS測定に影響が出ている可能性があるので要チェック ---> Check 終了
　○ CNT でも擬似連続スキャンができるようにしたつもり
　　　これまで SSD でだけ OK だったルーチンを変更したため
　　　SSD での擬似連続スキャンにも影響が出ている可能性あり。要チェエク ---> Check 終了
　○ 擬似連続スキャンの往復モード作る --> できる
　○ Real 連続スキャンモード作る --> できた
　○ スキャン結果で決めた場所に行く機能を作る --> できた
　○ スキャンのステップとか区切りとか、整数計算あたりで間違いがある --> 無かった
　○ SSD 使った測定で、あとから ROI を変えて結果を見直すことができるようにする --> した
  ○ Qt::UniqueConnection のおかげで Real Continuous Scan が可能になった --> すごい！
  ○ 各ステージのドライブ速度を適切に決めるため XAFSM.def に SPEEDS ライン導入 -> した
  ○ RealScan で、パルスモータの最高速度に引っかかって速度が変更された時は
     合わせて Dwell 等も変更するべき --> そうした
  ○ S2DRealScan すると、newValue() シグナルに S2D のルーチンが繋がったままになって
　　　普通に蛍光(XAFS)測定した時でも、全点のデータが S2D のデータとして保存されてた。
　　　---> 直した
○ XAFS測定スペクトルの 1次、2次微分の表示が必要? --> した

対処済み 2013.9〜
○ QXafs にプログレスバー入れたい
○ 2次元スキャン大幅に進歩
　　・2軸をチェンジャで指定することが可能
　　・SSD で擬似連続スキャンが可能

対処済み 2013.8〜
○ XAFSM.def に CHANGER の定義がないとき、AutoMode での測定を選択できなくしたり
　その他、「CHANGERがない」ことによる不具合が出ないようにチェック強化した。
○ QXafs のとき 分光器は PM16C-02 の Ch A に無いといけないが、
　そのようにアサインするコマンドが出てなかった。 
○ 元素名選択で、元素名を入力できるようにした。

対処済み 2013.7〜
○ QXafs で DMM の積分時間を 0.06秒以上にできない! -> 解決
○ MCAView のデータセーブの際に選択した元素の情報もセーブするようにした
○ I0, I1 のオススメガス表示に 3次光の透過率、1次光と3次光の検出効率の比、も表示する。
○ もしかすると、現状で SSD のダークはちゃんと引けてないかもしれない
   ---> 治ったはず。どうにかしてチェックする。SSDのダークは無意味
   (SSD がダメ子なので)
○ モーターのストップがない　---> Setup タブで停止可能(分光器も含めて)
○ 縦軸を1つだけ(2つだけ)にする指定
　  グラフごとに個別にスケールせず、全グラフを一つのスケールで描く
○ QXafs 表示線の選択を行えるようにする
○ BL6N で、エネルギーレンジのチェックがうまく動いてないらしい。
   とりあえず status-bar に状況表示するようにした。---> たぶん直ってる(単位 eV, keV 問題)
○ MCAViewで、平行移動と拡大縮小が両立してない(拡大縮小の時に平行移動がリセットされてる)
   ---> 勘違い、Min, Max が 0, 20 の範囲に入るように制限がかかってる
   ---> 例えば、shift で Min が -5 になってる時に、拡大・縮小しようとすると
        この制限にかかって、Min が 0 に戻されてしまう。
   ---> 実質的に違和感を感じないように、拡大の時は、Min, Max が 0, 20 の制限をかけない
        (縮小の時は、一番縮小した時にオリジナルのスケールに戻ってくるようにするため
　　　　　この制限が必要)
○ QXAFS のスキャンインターバルの考え方を変える。測定の開始時点から測った時間になった。
○ QXafs Interval の定義が変わったが、パラメータ・時間計算の所で反映していない -> した
○ QXAFS でポーズかかる？ --> かかる
○ QXafs で、3つ目の検出器に、1つめ、2つめと同じ物が使えてしまう。
○ バージョン番号とコンパイル日時を Condition タブに出すようにした。
○ ブロック指定の時間のところに勝手に 4.6 なにがしという値が入ってしまうことがある。
    ---> 多分解決。一つは原因を見つけた。
    (Normal XAFS用のパラメータ管理ルーチンと、QXAFS用のパラメータ管理ルーチンが
　　　両方フックされてた)
○ ブロックパラメータ読み書きの時の小さなバグ修正
　その時の表示単位とセーブ時の単位が違ってた時、表示単位をセーブ時の単位にするようにした
○ 「QXAFS mode」ボタンのコメントが変
○ 「測定毎にバックグラウンド」
○ MCA のファイルに I0 も記録したい
○ 測定モードに I0/I1 とかと並べて AUX1/AUX2 とか 3-chamber 用の選択肢もつくる。
   --> 作った。(Step Scan の時だけ意味がある)
○ 統一スケールはやっぱり必要 --> 多分できてるはず
○ ブロック指定のパラメータを内部で受ける配列を廃止！
○ Condition タブで 「Fixed Delta」 選択できるようにしてあった。
　これを選択した瞬間の「エンコーダ読み」と「PM換算」の差を記録し、
　「選択したエネルギー位置への移動」の際にこれを使うモード。
    ---> これを変更
　 測定を角度で等間隔で行うか、選択した単位で等間隔で行うかの指定ができるようにする。
    ---> した。

対処済み 2013.6〜
○ QXAFS スキャン開始、終了時の、LS と時間の記録が必要
  　　現在、開始時は記録している。終了時はまだ
○ XAFS 測定時の上書きチェックなんか怪しい
○ XAFS 測定でも、ファイルのステータス色表示やる。
○ SetHighSpeed を後から (SetSpeed(HIGH)を先)にやっても
　ちゃんとスピードが変わるかどうか要確認
○ もともとは測定や、モニタ、スキャン等の操作は、
   どれかをやってると他のことはできないようにしていたが
　各操作が必要とするモーターや検出器をチェックし、
　ダブらない限りは同時に操作することを許すように変更する。--> できたつもり。
○ 途中経過を確認できるように、gnuplot を使って表示できるようにした plot.pl
   まだ使ってない。
○ 複数チェンジャ、QXafsでのスキャン前後の Interval 導入に対応した機能を取り込み
○ チェンジャの機能を使って、2次元スキャンもどきの動作をするため、
   XAFS 測定でブロック数 1かつ点数 1の時、FixedPositionMode として
   分光器を動かす動作を飛ばすようにした。
○ SetUp の 「Rel/Abs」切り替えボタンをクラス化した。働いているかは要チェック
○ サンプルチェンジャ関係改造   ::: 未チェック
   ○ チェンジャを複数定義できるよう XAFS.def に CHANGER ラインを作った
   ○ チェンジャの選択、どれか一つのサンプル位置への単純移動、
      チェンジャの中心の再定義の機能を、SetUp ウインドウに移動
○ QXafs で、始点と終点でのインターバル時間を設定できるようにした。

対処済み 2013.5〜
○ MCA : Peak サーチがある程度まともに動いた。
○ MCA : Peak サーチの「感度」入力を有効にした。
○ MCA : Peak 選択したピークのエネルギーを指定することで
         キャリブレーションできるようにした。

○ MCA のゲイン入力を有効にする。--> した。
○ MCA のゲイン設定を設定ファイルに入れられるようにする。--> した。

○ MMainTh->isBusy で引っかかって測定不能になることが頻繁に起こる。
○ QXafs でダーク引くようにした。
○ QFio.cpp の SetDFName2 でも DFName00 を使うようにした。
   これで、QXAFS で auto-mode を使っていけない理由がない気がする... ので
   Auto-mode の時 QXafs が出来なくしているチェックを外す。-----> 要確認 !!!!!!!
   コードを見る限り大丈夫そう。---> 現場チェック !!!
○ AutoMode で測定中、「中止」を押された場合、
   現在進行中の1つのスキャンのみの中止か全体の中止かを尋ねるようなことが必要。未対応
○ AutoMode の初期位置(原点位置)を決められるようにする。未対応
○ QXafs 測定中に「中断」した場合の後処理を正しくしたつもり
○ master-branch と develop-branch を分けてみた。
   master を stable な branch にして、master に対しては bug-fix のみ、
   開発は全て develop で。
   master で bug-fix したら、develop に merge し、
   develop がある程度安心できると思ったら、master に merge する。
   というような方針でいけるか ?
○ "-5" --> "1,2,3,4,5" とか
   "7-" --> "7,8,9" の様な展開はできるようになってるか ?
   それとも認めない ?
   ---> 現状、想定していないので動作へん --> 訂正
○ AutoMode "a-b" 形式で a > b を認める。
○ AutoMode 一つの窓の中での位置調整を指定する準備開始。
   --> 一つの窓の中での位置調整できるようにした。つもり --> 現場チェック !!!!
   例: 1,4-2(1.1,2.5),3,5(0.3,0.2),7(0,0)
   の様に(a,b)で修飾して、一つの窓の中の位置を調整する。a, b は mm 単位の実数
   4-2(1.1,2.5) は 4,3,2 全てで (1.1,2.5) ずれた位置で測定
   1(0,0), 1(0.1,0), ...
   の様に一つの窓の中でずらしていく測定も可能。
○ 諸々の変更に伴って MeasA の意味が変わった「窓番号」ではなく
   連続測定の何番目かを表す変数になった。 
○ 記録用に AutoModeComment に試料窓番号と位置変位を書いたが、
   実際のファイル書き出しにはまだ使ってない。
   (Fio の WriteHeader と QFio の WriteQHeader に入れる)
○ AutoMode 入力の注釈に changer の絵を入れた
○ AutoMode でセンターを指定する機構を入れた。機能するかどうかは現場でチェック
○ AutoMode で必要になる AUnit *ChangerX, *ChangerZ が初期値として
   NULL クリアされてなかった --> 訂正
○ 定義ファイルで ChangerX, ChangerZ が定義されていない場合、AutoMode に入れなくした。
○ AutoMode スタート時、代表名のファイルを作成するようにする。
   (上書き確認の対象にする)
○ ParseAutoMode が AutoMode = "" の時でも、要素1個の list を返してしまうので
   ( 試料 0 を選択した )測定が始まってしまっていた ---> 訂正
○ AutoMode でチェンジャが試料位置に移動するのを待つようにした。
○ AutoModeMeasurement の最初で、auto mode に入って良いかどうかの確認をする前に
   AutoMode->setDisable( true );
   してしまってるので、auto-mode に入らない場合、以後 AutoMode への入力ができなくなる。
   訂正。
○ AutoModeMeasurement の最初で、AutoModeButton が押されていないと
   AutoModeParams をクリアしてしまっているが、これがセットされるのは
   AutoMode の編集終了時だけなので、ここでクリアしてしまうと、
   この後 AutoMode の入力欄を触らずに auto-mode に入ろうとした時、
   AutoModeParams が無くなってしまってることになる。
   訂正。
   ---> AutoMode で測定開始時点でパースして内部変数 AutoModePars がセットされるので
   （この変数が、測定開始時点での AutoMode の状態を憶えている変数として働くので)
   AutoMode->setDisabled( true/false ) は不要になった。
   // ○ AutoMode で測定中、「中止」を押した場合、
   // 正しく(AutoMode->setDisabled( false ) とかをやって)抜けてるか確認する(未確認)
○ Fio.cpp の SetDFName で、auto-mode でない場合でも MeasA を使って
   ファイル名を変更しようとしている。---> やめた ( DFName00 復活 )
   // これをやめたので関係ないが、MeasA の初期値を 0 クリアしてなかったので
   // auto-mode に入らないで、通常測定を行うと ファイル名がまともでなくなっていた

対処済み 2013.4〜
○ QXafs ヘッダの形式を 9809 にした
○ QXafs の時、Points とか間隔の関係がおかしい気がする。
   Points 入力 ---> 間隔表示(切り捨て表示) --> 切り捨てた間隔で幅を割って再度 Points計算
   みたいになってる。しかもその結果が表示されてない
○ QXafs dispf の設定できてない気がする --> 直したつもり
○ QXsfs : EIB741 のトリガに対するディレイの設定 (0にする) 入れた？
○ 10,000本 XYView の機能を使うように QXafs.cpp を変更。
○ 現在 QXafs のリピートの上限は 9999, 通常 XAFS は 99 これと
   測定点数の組み合わせで、各部の動作が耐えられるかどうか確認。
   QXafs の測定点数 9900 点。XYView はこれに耐えられるか？リピートがかかると？

   10,000 x 10,000 = 1x10^8点 x 8byte = 800 MByte ...
   メモリの量としては大丈夫。だけど、処理的に(update() 時に10,000本の線の再描画とか)
   現実的とは思えないので、表示する線の本数は制限する。
   連続表示 100本(C本)、足跡表示100本(F本、10000/F 間隔)でどうだろう。
   これだと、通常 XAFS は全部連続表示の範囲に入る。
   200本 x 10,000点 = 2M点 x 8Byte = 16MB : 再描画がどんな速さになるかは
   動作環境次第。現実的に考えて 200本 x 1,000点なら平気だと思うけど...

○ QXafs 前後で移動するときのスピード H の設定 --> やった
○ 定義ファイルに ノーマル XAFS 可能、Q Xafs 可能 のフラグか何かを入れる
     --> QXafs に使えるリスト、NXafs に使えるリスト を入れた
     --> XAFS 測定時, Scan, Monitor 時にチェックするようにした。
○ QXafs 実現に向けて
  ○ QXafsMode on/off に合わせて MwMeas の表示変更
　　　ブロック入力部分、検出器選択部分、標準パラメータ設定部分、逆方向スキャン選択部分
  ○ 測定時 PM16C04 のチャンネル A が分光器(03)になるようにした
  ○ Agilent34410 を DV という名前で AUnit に登録
  ○ 定義ファイルに "QXAFS-I0" と "QXAFS-I1" が無いと、QXafsMode はオンにできない
  ○ 測定開始時に QXafs に使えないセンサーを選んでいないかどうかチェックした
  ○ PM16C からトリガが出ることは確認した。
　○ トリガパルスを見ながらの動作確認で、往復測定、
　○ 片道測定、往復測定等の動作が正常にできることを確認
  ○ Agilent34410 を使い始める。DV は QXAFS に特化したセンサーとし、
     PAM に相当するような汎用的な使い方をするときは DV2 にすることにした。
     DV2 のコードも大体書いた、これで使えるかどうかのチェックはしてない。
  ○ 34410 側に QXAFS 専用コマンドを作ってもらったので、DV は完全に QXAFS 専用
  ○ 34410 のXAFS 専用コマンドの高速化も達成してもらった
  ○ mUnits にも QXAFS 専用インターフェイスを入れた QStart, QRead, QEnd 
  ○ File 書き出し部分も基本的には書いた
  ○ スキャン開始時点でエンコーダ読みとPM16C読みの対応関係を記録する。
  ○ スキャン開始、終了時の、LS と時間の記録が必要
  　　現在、開始時は記録している。終了時はまだ
  ○ EIB741 も使えるようになった。
　○ 34410 のドライバの不安定性が少し残ってる
　○ 多数回繰り返しも基本的に OK 
  ○ QXafs MaxSpeed モードと MinTime モードを作った
  ○ 測定にかかる時間、何回目の繰り返しか、終了予定時間、など表示

○ 「測定前にバックグラウンド測定」指定があった時、
　　バックグラウンドを測る部分が #if 0 になってた。
○ GoTo 等で移動するさきや、XAFS測定時のブロック指定などで、
　分光器の範囲外の値を指定した場合、エラーでハネるようにした。
  (XAFSM.def の Min/MaxRangeInEV)
○ GoTo 等で移動する先や XAFS 測定のブロックを指定する場合の
　デフォルトの単位を変えられるようにした。
  (XAFSM.def の DefaultUnit)
○ SSD を使った XAFS 測定終了時、
　　最終的な SSD の on/off を info ファイルに記録するようにした。
○ SSD を使った XAFS 測定は強制的に Real Time にした。
○ SSD を使った XAFS 測定時、MCA の画面が生きていれば、リアルタイムに MCA が見られるのは
　大きなメリットだけど、ROI を変えることができてしまう。これをメリットと見るか？
   ---> 選択肢を入れた
○ SSD おかしいのは 3, (6), 11, 14, 16, 17 ch (0〜18の中で) 6 は他とは様子が違う


対処済み 2013.3〜
○ Save のタイミングが前だったり後だったり... ----> 
   データが新しくなってるのにセーブされてない、ファイル名が古いまま、
   新しいファイル名を入れたけどデータは古いまま、などの状態を
   ファイル名表示ボックスの色でそこはかとなく表現してみた。あなおかし。
○ SSD にプリセットタイムを設定するとき、SSD が STOP していないと受け付けてくれない。
　AUnit->SetTime の中で、ストップと時間設定を連続で発行するようにした。
　これで大丈夫な模様。
○ Fio.cpp で LS(SLS) が無いときでも、あると決め打ちして読みに行ってた。
   --> 修正
○ MwMeas での Range 設定おおよそできた。
   先に「MwMeas」で選択されていたセンサーを後から「MwSetUp」で autoRange にした時、
   「MwMeas」の方の Range 選択を Invalid にするのがまだできてない。--> できた。
○ XAFS 測定の時 Repear > 1 にすると、2回目以降の測定時のグラフが変 --> 直したはず
○ 測定中に、何回目の繰り返しの何点目かを表示するようにした。
○ Xmap-SSD とは Stars を経由せずにリンク。
  ・MCA のスペクトルを表示する。19 ch 分のデータを保存する
　・XAFS, Scan, Monitor も新しいリンク経由で行う。
　・副次的に XAFS, Scan, Monitor 中も MCA スペクトルが見えるようになった。
    (MCA on するのではなく、先に MCA の画面を表示させておき(MCA on->off) 
     その状態で、XAFS, Scan, Monitor を行うと、
     MCA の画面の方にはその時々のスペクトルが出る)
○ SSD のデータは Stars 経由せずにとれるようにしたが。
○ XAFS 測定中、各点での MCA スペクトルを保存できるようにした。
○ MwSSDSetUp でのデータ保存で 19ch 全部の保存ができるようにした。
○ 19ch SSD のデータを Stars 通さずに受け渡せるようにした。
○ イオンチャンバのお勧めガス表示できるようにした。
○ MCA の pixel No. と energy の関係を従来は直線で近似していたが、
　一部の素子はわりとはっきり曲がった関係になるので、2次関数で近似することにした。
　(さすがに 3次はいらない?)
○ I0 の MeasDispMode を Trans にしていたので、
　 I0 を決め打ちにできない Extra の時 (Lytle とかの時)、
   記録される I0 のモードがおかしくなってた-->修正済み
○ Munits.cpp の readValue でダーク補正やってた。
   Record とか DispMeasData で補正すると二重にやってることになる !!!!!!
○ View タブのタブ名に XAFS, SCAN, MON. MCA, D-XAFS, ... が表示されるようにした。
○ MCA のデータを読み込んだ時、MCAView のコントロール(log表示とか、元素表示)が効くようにした。
○ MCAView の ViewTab 選択をまともに。すでに表示されている MCAView があると、
　他の ViewTab を使えなかったのを直した
○ Scan が正常に始まらなかった時 View を専有したままになってしまう。
○ だいぶゴタゴタしたけど、
   View を切り替えた時、表示のデータ線を選ぶボタンが切り替わるようにした。
○ Dwell time : 先頭ブロックの値を全部ロックで使ってしまってた。直した
○ Dark の表示を作るべし
○ 19ch SSD を使った時ファイルへの書き出しは SSD が先で I0 が後だという事が判明。
   Fio.cpp, Data.cpp で書き出し、読み込みを直した、つもり。未確認。
○ MCAView で元素名表示がつめつめだったのを少し改善。
○ 480 点測定時間の内部タイマー時間依存性
   100ms - 9min
    50ms - 6min
    40ms - 6min
    30ms - 
    20ms - 5min
    10ms - 5min
     1ms - 5min
○ ちょっと怖いが deg2keV とか keV2any とかを Units というクラスに切り出す。
   (Data クラスの中で使いたかったから)
○ 測定予想時間補正. Cu-Ka 辺で、480点の測定に10分余分にかかる事を考慮
○ Measure で SSD 選択時、MCA の生データを残す機能は要らないか？ --> ssd.dat
○ MainWindow オンリーワン class 構成をやめたい。---- もう無理 ^^;;
○ 野村ファイルフォーマットに真剣に対応(以下残ってる問題点)
　・Offest はまだ真面目に扱ってない --> 真面目にやった
　・FLUO のとき、各チャンネルのモードを真面目に書いてない
	 --> たぶん大丈夫
○ 野村フォーマットだと、開始・終了時のリング電流がいる。
   LS をサポートする。
○ SSD-MCA 表示する元素選択の基本は作った。実際の選択はまだ
○ SSD はどれかのチャンネルが死んだら (0になったら)
   埋め合わせたデータを生成する機構が欲しい)
     ---> かなり作りこんでみたけどやめた。
          測定後にならどうにかできるかもしれないけど、リアルタイムではちょっと情報不足
○ もしかすると、View を閉じれ無くなってる? (たぶん閉じちゃダメフラグを落とし損ねてる)
○ 19ch SSD データ記録、ダークの扱い関係、一応は落ち着いた
   ただし、全部 offline で直したので、実際に正しい値になっているか、
   ICR が [count/秒]で良いか、等は要検討。
○ measure 19ch SSD のデータは XYView に合計も含めて全部渡して、
   表示チャンネル選択を測定中に可能にする。
     --> とりあえずデバッグルーチン的に 19ch 全部のデータを ssd.dat に書く機能を
         Monitor.cpp に入れて設定で ON off できるようにした。確認はまだ
○ SSD-MCA 平行移動 --> いらないことにする。
○ 測定中に合計する SSD のチャンネルを選んだ時、正しく反映されていない。
○ MwMeas と View に connect ができてしまったので
   適切に接続、切断ができているかどうかは要チェック
   --> MwSSDSetup と MCAView の connect も同じ事
   (こっちは前からあるのでだいぶチェックされてるが)。これらの connect を外した。
   --------------------------
   MainWindow -> Viwe : emit -> signal -> slot ではなく直接の関数呼び出しになった
   View -> MainWindow : View のコンストラクタに parent (MainWindow) の pointer が
                        渡っているので、内部で connect/disconnect する。
○ View 選択の現在の動作
   (MainWindow::SetUpNewView と ViewCTRL::setView の共同作業)
   if ( 選択中の View が空 )
      その View を使う
   else
      if ( 選択中の View が同じ種類 )
         その View を使う
      else
         if ( 前から順番に View を探して同じ種類の View か空き View が見つかったら )
            その View を使う
         else 
             諦める。

対処済み 2013.2〜
○ XafsM2 にエンコーダの値セットの機能を持たせられるはず。
○ 測定時の描線選択ボタンだいたいできた。
　　どの描線に対応するかの名前の割り振り、初期状態での On/Off もだいたいいいはず
○ 透過の測定の時に I0 だけでなく、I1 も表示する(計算前の生データ)とか
　SSD を使った測定の時に個別素子のデータも表示する、ということが
  できるようになったが、デフォルトの選択が微妙(19ch 全部の表示はいらないはず)
○ 透過の測定の時に I0 だけでなく、I1 も表示する(計算前の生データ)とか
　SSD を使った測定の時に個別素子のデータも表示する、ということが
  できるようになったが、実際には I0, I だけ測定とか、I0, 19ch-SSD だけ測定とか
　特定のモードに限定してしまった。
　(ライン目のデータが何に対応してるかを考えるのが面倒だというのが主な理由)
	---> 個別モード縛りは外したつもり
○ SSD を使った繰り返しスキャンの時、個別チャンネルのデータ表示はうまく働いているか
   要確認 --> 働いてる
○ 測定終了時のデータ上書きでなんかエラーが出てる。--> 治った
○ SSD を使った測定の時に個別素子のデータも表示する、ということが
  できるようになったが。
○ 測定時に I0, だけではなく I も表示した
○ MwMeas 測定中に何番目のデータのグラフを表示する・しないを指定する機能を入れた
○ MwMeas と SSD を連動させて、測定中に SSD の Ch の選択が変わった時、
　その結果を受けて合計のグラフを変化させるようにした

○ LS ring に対応するべき
○ MCA のエネルギーの調整の機構を作る。
   係数は作った。--> 補正するようにした。正常に動作するか確認はまだ。
   ROI All Set した時、ズレてる奴があるのはこのエネルギーエネルギー調整機構のせいかも
   バグとった
○ SSD 横軸補正
○ SSD-MCA カーソル位置を置いておきたい
○ SSD-MCA 元素の蛍光位置の表示が欲しい
○ SSD-MCA 副次的に縦軸 log 表示を真面目に整備してしまった。
○ SSD-MCA 全部一緒みたいな設定が欲しい
○ SSD-MCA CPS も表示
○ SSD-MCA ROI の扱いがおかしい。(ウィンドウサイズを変えると変)
○ SSD-MCA ゲインの調整はかなりよくできていてほぼ「チャンネル番号 x 10 = eV」なので
　   そういう横軸表示にしてしまう。--> MCA View 内の横軸は keV

○ XAFS 測定結果として記録されるのは
    1. 行頭:  設定角度
    2. 2番目: 常に Enc   または Enc/PM を選択した値
    3. 行末:  設定角, Enc角度、Enc換算エネルギー、PM角度、PM換算エネルギー
       を付け加えるかどうかを選択可
○ 分光器設定をメニューバーから、Status タブに移した。
○ Stars サーバ設定をメニューバーから、Status タブに移した。
○ MCAView で一度設定した ROI を修正できるようにした。
   (毎回1からではなく、決めた ROI のどちらかの端点の修正ができるようにした)
○ 周期表に色をつける範囲を自分で選べるようにした

○ 以下の、19ch SSD データ記録、ダークの扱い関係、一応は落ち着いた
   ただし、全部 offline で直したので、実際に正しい値になっているか、
   ICR が [count/秒]で良いか、等は要検討。
　○ 19ch SSD のフィアル記録 19ch 分展開する。19ch 分 icr。19ch 分 offset
　○ SSD は(GetValues した後は)内部的に
　   TotalEvents, CountsAll, CountsInROI, ICRs を記録するようにした。
　○ 19ch SSD のダーク測定 に話が波及 !!
　   SFluo に対して Dark 測定したときは、
　   (AUnit*)SFluo の内部に 19ch 分の Dark が保管されるようにする。--> した。
　○ SSD 使った XAFS 測定の時、測定ファイルにはちゃんと 19ch 分のデータが書かれているか
　　　要確認
　○ SSD に IRC も記録

○ 19ch SSD (TotalF) が存在しないと異常終了してた。
○ レンジ設定できる検出器がないと異常終了してた。

対処済み 2013.1〜
○ 分光器：測定中はマニュアルで動かないようにロックする
            その為のフラグ立ては、外部での仕事にして、
　　　　　　2種類(マニュアル、測定)の「移動コマンド」は廃止
○ データ読み込み表示で、線の色の選択をも一回生かしてみようかな。
    やりかけ、色を選ぶところまではできたけど、
　　それを実際にグラフの色にするのはできでてない。
○ MwMeas 計測データファイルの選択のタイミングと測定開始のタイミングで2回
   上書き確認を行なっているが、選択のタイミングで確認済みなら、
   測定開始時には確認しないようにする。
○ MwMeas ChangeBLKstart で、スタート位置を変化させた時、
     前後のブロックで「間隔」を固定して「刻数」を変えるべき。

○ offset の使い方確認 (今は測定したその場で引いている)。--> PF, SPring8 ともこれで OK
○ 設定されているダークの値確認と、ダークの値をて入力でセットできるようにした。
○ 「バックグラウンド測定」まで進んだ状態で「Stop」した時、「バックグラウンド測定」は
　止まっていなかったのを修正した。
○ nct08 via keithley 等について、レンジ設定で「auto range」も選べるようにした。
○ Fio.pp でチャンネルのモード、オフセットをちゃんと書くようにした。
    --> Data 読み込み表示でも、チャンネルごとにモードを決めて表示可能になったはず
○ Data 表示のために 9809 ファイルヘッダのパーサを真面目に書いた。めんどくさかった。
   結果、透過モードかどうかの情報しか使ってない...
○ XYView がわりとだめ。--> たぶんもうだいたい良い
　　多数のデータを重ねて表示することを想定した group が全然有効に機能していない。
　　多数表示されるグラフに対応した縦軸の表示や、どれがどの線かの区別をどうつけるかが
　　きまらずにごちゃごちゃしたが、マウス指示でアクティブに軸表示や
　　関連情報表示を行うようにしよう。
○ データ読み込み。 だいたいまともになった。
　　だけどその過程で XYView の group の考え方がダメなのがはっきりしてきた。
    group はやめよう。
○ XView 部分拡大 -> XYView で Zoom, 並行移動、領域選択拡大を実装
○ Scan, Measure でマウスカーソル位置のｙ軸の値が表示されなくなってる->直した
○ Dwell Time に制限がある場合、実際に設定するときに値を変えてしまうことがあるが
　その旨を通知するようにした。(通知するだけ)
  --> OTC, OTC2 で働くかどうかは要チェック -> 大丈夫そう
○ Ortec974 に対応。CNT, CNT2 に対応して OTC, OTC2 を実装。動くかどうかは現場でチェック
○ ダーク測定のためシャッターオープンクローズ確認シーケンス導入
○ ダーク測定関係対処終了
○ ダーク測定    AUnit にダークを保持する変数をもたせる。
○ Scan の時の表示の Normalize 真面目に対応する
○ XYView で mouse 位置の値表示やりかけ
    横軸の目盛り数字正常化と込で終了
○ puls -> energy, angle の変換が変 ?? 大丈夫な気もする。　現場で再チェック
    --> 定義ファイル(XAFSM.def)が間違ってた
○ 周期表で元素選んだ時の反応が変
   修正. エネルギーが範囲外になって選択をはねた時も、表示上では選択できたことになってた
○ 同じ keithley に対して Keithley ドライバ直接と nct08 経由で同時に使おうとすると
   まずいんでないかい。ハネるべき。
○ DeadTime 表示
  　　 青   ->  緑   ->  黄   -> オレンジ -> 赤　　にするとしたら？
      0 0 1 -> 0 1 0 -> 1 1 0 ->    ->      1 0 0
       0 %      10%      20%        ->       100%
○ MCA スペクトルは、チャンネルを切り替えるたび追随して、既に測定されている
　そのチャンネルの測定内容を表示できるはず。 ---> iできるようにしたつもり要確認
○ 微調整: 日本語ファイルの更新。
○ 画面の一番上で、吸収端に関しては keV, deg、分光器位置は deg, keV の順で
　　表示していたのを揃えた。
○ GetRange できるようにした
   GetRange で選択中のセンサーのレンジを取り込む。
　 GetAllRange でレンジ選択できる全部のセンサーのレンジを取り込む
○ "CNT2" に関する若干のバグ取り
○ Range 設定ができる(必要な)センサーを使って測定を開始しようとするとき
　注意を促すダイアログポップアップ
○ Keithley をプリアンプ代わりにしてカウンタを使った測定をする際、レンジの扱い
　(今はオートレンジに頼ってる)
　レンジ指定もできるようにするべき --> CNT2 ができたので内部的にはできる。
　ユーザーインターフェイスをどうするかが問題。どうにかした。
○ V/F コンバータの向こうに Keithley をつなぐとき
　実際には、単にカウンタではなく Keithley の初期化も必要になるので
　派生したディテクタとして扱えるようにするべき --> CNT2 有効にした。要チェック!!
         --> ダメだった。nct08 のドライバ宛に Keithley のコマンドを投げる。(当然だ!)
         --> 2nd driver の指定が必要。やった。一応動いてる
　だけどこれ、一般的にはどうするんだ？ V/Fコンバータやcounterの向こうに
　いろんな物がつながるのは一般的には色々ありえるけど、その都度全部拾うのか？
　--> ひろうのは簡単そう
○ Log メッセージ末尾の「改行」を整理。
○ MCA モードの時に指定時間で止まる機能がいる気がする。　　できてるつもり。できてた。
○ 起動オプションを解釈するようにした。
     -e : 英語版として起動
     -j : 日本語版として起動 (default)
     -d [file-name] : XASFM.def の代わりに[file-name]を定義ファイルに使う。
○ XAFSM.def の内容を確認。simmotor 使用版と、全部リアル版を明確にする。
     XAFSM.def.BL5S1 : 全部リアル版
     XAFSM.def.BL5S1.usingSimmotorButSSD : SSD 以外 simmotor

○ 久しぶりに日本語化を真面目に。
○ 今まで XafsM2 : 英語版で起動、XafsM2j : 日本語版で起動だったのを
   XafsM2 : 日本語版で起動、XafsM2e : 英語版で起動に変えた。
○ Scan, Monitor, MCA のデータセーブに対応
○ SSD(19ch all)を選んだ時、SSD Setup 画面で選択したチャンネルだけの合計を取るようにした。
○ XView の XY プロットモードと Ring モードを切り分けて別々にした。
   (MCAView の作成に合わせてした準備はかなり進んだはず)
○ モニターの時の縦軸の目盛りまじめに --> ある程度真面目になった
○ モニター時にマウスで時間シフトできるようになった。

対処済み 2012.12〜

○ Status 画面の2つの clear ボタンの動作
　・"Clear Busys" は該当するユニットの isBusy, isBusy2 プロパティをクリアする。
　　画面上の状態表示を直接は操作しないが、
　　その結果発生する signal で、画面上の状態表示も更新される。
    isBusy2 は、プログラムの内部フラグなのでクリアしても大きな問題は無いが、
    isBusy は本当は制御対象の状態をこちらにコピーしたフラグなので、クリアすると
　　対象の状態とずれる危険がある。
　　しかし実際には、
　　「対象の状態とずれてしまった結果、対象はクリアなのにクリアになっていなくて
　　　プログラムの動作がブロックされてしまう。」という状況を救うために使うはずなので
　　多分問題なし。
　・"Clear Enable" は該当するユニットの enable プロパティを真にする。
　　この時、isBusy, isBusy2 も同時にクリアする。
　　これも上の、isBusy 問題同様、制御対象が enable かどうかは、制御対象の状態によるので
　　勝手にプログラム内のフラグだけをクリアするのは危険。
　　しかしやはり Clear Busys 同様、
　　「対象の状態とずれてしまった結果、対象はenableなのにenableと認識されていなくて
　　　プログラムの動作がブロックされてしまう。」という状況を救うために使うはずなので
　　よしとする。

○ 起動時に各ユニットが enable かどうかの判定は、Stars サーバ相手の
　　listnodes コマンドの応答で決めている。
　　またその後は、_connected, _disconnected のイベントを監視している。
　　(上記のどれかのイベントで)デバイスの状態を disable から enable に変える際には 
　　isBusy, isBusy2 も同時にクリアしている(逆の場合には操作しない)。
　　これは、Stars サーバの動作をモニタしていると実際にはかなり危険で、
　　「enable なのに listnodes に出てこない」とか「disable なのに出てくる」、
　　あるいはデバイスの connect, disconnect が検出されずイベントが発生しないということが
　　あり得る。
　　「enable なのにそう認識されていない」場合は、「Clear Enable」で強制的に
　　enable にできる。(当然だが制御対象を enable にするのではなく、
　　プログラム内で対象が enable だと認識された状態にする。)
　　「disable なのに enable と認識されている」場合は、
　　そのデバイスを使った動作をしようとした時点で、isBusy か isBusy2 がクリアされなくて
　　動作が進行しなくなるはず。その場合は、clear busys ボタンで逃げて、
　　対象デバイスが正常に接続されるまで、そのデバイスを使わないようにする。

○ enable/disable, isBusy, isBusy2 の状態を監視し続けるのは
　　プログラムの動作に大きな負荷になる可能性がある
　　(実際には測っていないので問題ないぐらい軽い動作かもしれない)。
　　「Status watch active」ボタンで監視する・しないを切り替え可能。
　　ただし、これを on にしても off にしても、内部のフラグ enable, isBusy, isBusy2 は
　　通常と同じくセットリセットされる。単に変化が表示に反映されないだけ。

○ SLOT の中で、SIGNAL の発信者を特定するのは sender() !!!!!!!
  これで GUI 自動生成プログラムで怖いところがほぼなくなった。
　にしても、もう少しシンプルな方法が欲しい。
  (Motif が懐かしい)

○ ドライバの Status 表示を実装
　久しぶりにガッツリ遊んだ感じ。
　ドライバの connect, disconnect に応じた enable/disable の表示
  isBusy, isBusy2 のセットの状況を見えるようにする。
  さらに、なんかのトラブルで isBusy, isBusy2 がセットされっぱなしになった時
　強制的にクリアするボタンも実装。
　だけど、先にやった connect/disconnect の監視や Er: をリカバーする機能が
　結構まともに働いているので出番が無いかも。

○ Stars ドライバの状況に対してできるだけコンクリートになるようにしたい計画
　○ ドライバ・デバイスが使えない時に、できるだけ異常動作にならないように
      (典型的には、Scan 等が進行しなくなり、正常になった後に Stop/Start しても
      	復帰しないなど)
　　　Stars 上のデバイスのコネクト、ディスコネクトの状態を反映して、
　　　デバイスのアクティブインアクティブを制御するようにする。
　○ ついでに、起動時に listnodes をチェックして、起動時点で使えるデバイスもチェック
     ただし、これはやらないほうが良いかもしれない。
     (BL5S1 の Stars server が listnodes に正常に応えない時があるように思えるため)
　○ Ok: でなく Er: もひろう。
○ 使用する Stars ドライバリストを XAFSM.def で与えようと思っていたけどやめて
　XAFSM.def の各ユニットの定義から拾って、自分でドライバリストを作るようにした。

○ Scan の時 Stop に対する反応が遅い。(dwell タイム分待たないと反応しない)
　　ストップボタンの色だけ先に変えるようにした。
○ MCA Start-Pause ボタン体制から Start-Clear ボタン体制に変更中
○ MCA の Ch を変えた時、次回のスタートでは勝手にクリアされるようにする。
○ 例えば MCA の描画中 (Stop を押していない状態)で、同じ画面を使って Monitor を
　スタートしようとすると落ちる (MCAView とか色々が delete されるため)
○ MCA Dead Time 表示、取得。
○ Set Up の画面が手狭になったので、MCA を切り分ける。
○ MCA 画面内に情報。RealTime, LiveTime, CPS,...
○ XAFSM.def で、センサーに関して親ユニットがあるかないかと、その親ユニットの指定を入れた
○ XAFSM.def で、ユニークな識別子の定義を入れた
○ XAFSM.def で、モータの移動単位が REAL か INT かを示す項目を入れた。
   PM は INT, PZ は REAL
○ SSD 使えるようになってきたけど、まだ大変。
　シングルチャンネル含めて設定をやる画面つくった。
  ROI, peaking, dynamic, calibration, threshold, MAC サイズの確認　まで済。
　Real/Live は Real こていでいいかな。
○ SSD 設定画面
○ XView 測定結果の中にカーソル
　Measure, Monitor, Scan 全部
○ MCAView は XView と独立に作った。
○ V/F コンバータを BL5S2 からもらったので、Keithley を I-V コンバータに使って、
　NCT08 を通した測定が可能になった。
　I0, I1 につながった Keithley の出力を V/F コンバータに入れ、
　その出力を NCT08 の Ch2, 3 で数えている。
○ モニタに nct08 を必須にしない
○ モニタの時の dwell time  :: できてるはず
○ Scan モード多分できた。
○ 仮のコードだった個々のStars クライアントとの通信コードを実コードと置き換えはじめる。
  1. nct08 対応済 (もう少し細かいチェック必要)
　2. Keithley とりあえず実装 : 未確認
　3. エンコーダ　スケルトン実装
○ 軸の位置はエンコーダで判断するようにする
○ モータのパルスで見た角度とエンコーダで見た角度の整合をとる。--> とらない。
○ ファイル書き出しするようになってる。
○ ピークスキャン、タイムチャートとりあえず完成。
○ 測定結果のファイル名を、画面上の入力で変更しても、ダイアログの方が変わらない


○ アイデアとしては以下のように完全 Timer 排除ができるはず。やらない。
   測定開始時に emit - connect で、MeasSequence を呼び出す。
   MeasSequence からは、必ず Stars のコマンドを一つは発行してから抜けるようにする。
   発行されたコマンドに対する Stars からの応答を受ける関数の中から emit-connect で
   MeasSequence を呼び出す。


対処済み 2012.10〜

○ Monitor のグラフ表示整理
○ BLC2 から Stars サーバのアドレス等の設定関係のコードを移植 動いてるか? たぶん大丈夫

○ Stars.cpp ConnectionStage は enum にする。
   (SendCMD 等で最終ステージに着てるかどうかをちぇっくする)
○ ConnectionStage の 2段階目で Stars からの応答をチェックするようにした
○ Stars.cpp 接続開始をイベントドリブンにした
○ show は Initialize の後にしたいけど今はやってない。
○ 相手を変えて ReConnect 正しい相手にして ReConnect しないと繋がらなかったのを修正
○ グラフ表示のスケール決定がメチャクチャ。ー＞とりあえずは見られるようになった
○ 検出器ごとにデータ取り扱い法を指定できるようにする。
   log(I0/I1), I/I0, ... 等
○ nct08 の GetValue 関係で、一つ前の値を読んでしまっている。
○ MwSetup で、一般のモータ移動の欄 BLC2 版の Stars 通信に対応済
○ MwSetup で、モータの名前と実際に指定されるモータがずれていた
○ それに合わせて、BLC2 同様に別名を使えるように変更
   XAFSM.def の中の XAFSName, XAFSKey, XAFSTitle
○ BLC2 のコードを元に、軸の移動や検出器の操作等をポーリングでなくイベント駆動に書き換える
○ 仮のコードだった個々のStars クライアントとの通信コードを実コードと置き換えはじめる。
  0. pm16c04 対応済み
○ センサーの初期化処理を「どかん」とやってしまってる。
   ---> 少なくとも測定開始時は丁寧にやるようにした
○ 周期表での測定対象元素指定

○ 野村ファイルフォーマットに真剣に対応中
　・どうせ野村フォーマットにしないなら、エネルギーと角度を両方書いた方がいい

対処済 2011.2.16 〜

○ 計測中の現在位置表示 (繰り返し何回目、何ブロック目、何ステップ目) : 取り合えず OK
○ BlockStart ... は、計測開始時にコピーして使う (Repeat だけは計測中に変更可)
○ pause を生かす
○ stop 時の「ほんとに？」ダイアログ。
○ 終了時の戻り位置指定
○ 見積り測定時間の表示
○ 測定開始前のデータ点検
○ Stars との接続 (その先の dummy デバイスとの接続)
○ 作業ログ
○ データのリアルタイム表示
○ 結晶変更 (プログラム側での変更だけ)
○ Stars シミュレーションコード削除
○ モーターの単純移動
○ Scan/Search の実装
○ SoPS: 相対移動をもう少し考える(width 指定、始点終点指定の使い分け)
○ ピーク位置決定
○ SoPS: スキャン中のモータの位置表示位置を考える
